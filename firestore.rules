
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Helper Functions
    // =================================
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isUserRole(role) {
        return isSignedIn() && getUserData(request.auth.uid).role == role;
    }
    
    function isOneOfRoles(roles) {
        return isSignedIn() && getUserData(request.auth.uid).role in roles;
    }
    
    function isProjectMember(projectId) {
      let projectData = get(/databases/$(database)/documents/projects/$(projectId)).data;
      return request.auth.uid == projectData.leadId || request.auth.uid in projectData.memberIds;
    }
    
    function getRolePermission(permission) {
        let role = getUserData(request.auth.uid).role;
        return get(/databases/$(database)/documents/permissions/$(role)).data[permission] == true;
    }

    // =================================
    // Collection Rules
    // =================================

    // --- USERS ---
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || getRolePermission('canManageUsers');
    }
    
    // --- PROJECTS ---
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if getRolePermission('canApproveProjects') || isProjectMember(projectId);
      
      // Updates subcollection
      match /updates/{updateId} {
        allow read: if isProjectMember(projectId);
        allow create: if isProjectMember(projectId);
        allow update, delete: if false; // Updates should be immutable
      }
    }
    
    // --- INVENTORY ---
    match /inventory_items/{itemId} {
      allow read: if isSignedIn();
      allow create, update: if getRolePermission('canManageInventoryStock');
      allow delete: if getRolePermission('canManageInventoryStock');
    }

    match /inventory_requests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if getRolePermission('canApproveInventory');
    }
    
    // --- PROCUREMENT ---
    match /new_item_requests/{requestId} {
        allow read: if isSignedIn();
        allow create: if getRolePermission('canRequestNewItem');
        allow update: if getRolePermission('canApproveNewItemRequest');
    }
    
    match /procurement_buckets/{bucketId} {
        allow read: if isSignedIn(); // All members can see buckets to join them
        allow create: if getRolePermission('canCreateBuckets');
        allow update: if getRolePermission('canApproveNewItemRequest'); // Only managers/admins can change status
    }
    
    // --- REIMBURSEMENTS ---
    match /reimbursements/{reimbursementId} {
        allow read: if isSignedIn();
        allow create: if getRolePermission('canSubmitReimbursements');
        allow update: if getRolePermission('canApproveReimbursements') || isUserRole('treasurer');
    }
    
    // --- FINANCE ---
    match /accounts/{accountId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isUserRole('treasurer');
    }
    
    match /budgets/{budgetId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isUserRole('treasurer');
    }
    
    match /transactions/{transactionId} {
      allow read: if isSignedIn();
      allow create, update: if isUserRole('treasurer'); // only treasurer can add/reverse transactions
      allow delete: if false; // Transactions should be reversed, not deleted
    }

    match /logbook/{logId} {
      allow read, write: if isUserRole('treasurer');
    }
    
    // --- SYSTEM & PERMISSIONS ---
    match /system/{docId} {
        allow read: if isSignedIn();
        allow write: if getRolePermission('canHoldKey'); // Only users who can hold keys can update status
    }
    
    match /permissions/{role} {
      allow read: if isSignedIn();
      allow write: if isUserRole('admin');
    }
  }
}

    